# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# box sizing
VB_MEMORY=1024
VB_CPUS=1

# generic setup
DOMAIN_NAME="delphix.local"
NODE_NAME="vagrant"

DELPHIX_ENGINE_IP ||= ENV['DELPHIX_ENGINE_IP'] || '172.16.138.157'
VMWARE_NETWORK_ADAPTER ||= ENV['VMWARE_NETWORK_ADAPTER'] || 'vmnet8'

IP_BASE = DELPHIX_ENGINE_IP.split('.')[0..2].join('.')

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  
  # Every Vagrant environment requires a box to build off of.
  config.vm.box = "bento/centos-6.7"  
  
  # size of the box
  config.vm.provider :virtualbox do |vb|
    vb.memory = VB_MEMORY
    vb.cpus = VB_CPUS
  end
  
  # network setup
  public_ipv4 = "#{IP_BASE}.42"
  config.vm.hostname = "#{NODE_NAME}.#{DOMAIN_NAME}"
  config.vm.network "public_network", ip: public_ipv4, bridge: VMWARE_NETWORK_ADAPTER
  
  #config the delphix provisioner
  config.delphix.enabled = true
  config.delphix.engine_url = "http://172.16.138.157"
  config.delphix.user = 'delphix_admin'
  config.delphix.password = 'delphix'
  
  # prepare the VM
  config.vm.provision "shell", path: "foo.sh"
  
  # create a new environment in the Delphix Engine
  config.vm.provision :delphix
  
end
