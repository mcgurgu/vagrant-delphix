# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# box sizing
VB_MEMORY=1024
VB_CPUS=1

# generic setup
DOMAIN_NAME="delphix.local"

# env variables that point to the Delphix Engine
DELPHIX_ENGINE_IP ||= ENV['DELPHIX_ENGINE_IP'] || '172.16.138.157'
VMWARE_NETWORK_ADAPTER ||= ENV['VMWARE_NETWORK_ADAPTER'] || 'vmnet8'

IP_BASE = DELPHIX_ENGINE_IP.split('.')[0..2].join('.')

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  
  # Every Vagrant environment requires a box to build off of.
  config.vm.box = "bento/centos-6.7"  
  
  # size of the box
  config.vm.provider :virtualbox do |vb|
    vb.memory = VB_MEMORY
    vb.cpus = VB_CPUS
  end
  
  #config the delphix provisioner
  config.delphix.enabled = true
  config.delphix.engine_url = "http://172.16.138.157"
  config.delphix.engine_user = 'delphix_admin'
  config.delphix.engine_password = 'delphix'
  
  # tasks for all environments
  config.vm.provision "shell", path: "prepare_delphix.sh"
  
  config.vm.define "source" do |node|
    
    # networking
    public_ipv4 = "#{IP_BASE}.42"
    node.vm.hostname = "source.#{DOMAIN_NAME}"
    node.vm.network "public_network", ip: public_ipv4, bridge: VMWARE_NETWORK_ADAPTER
    
    # configure the Delphix provisioner
    node.delphix.trace = true
    node.delphix.env_name = "source"
    node.delphix.env_ip = public_ipv4
    node.delphix.env_port = 22
    node.delphix.user = 'delphix'
    node.delphix.password = 'delphix'
    node.delphix.toolkit_path = '/home/delphix/toolkit'
    
    # sexecute the Delphix provisioner
    node.vm.provision :delphix 
    
  end
  
end
